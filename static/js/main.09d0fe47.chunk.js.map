{"version":3,"sources":["Pages/Survivor.js","Pages/Killer.js","Utils/storage.js","Utils/translation.js","App.js","index.js"],"names":["Survivor","Killer","loadFromStorage","key","default_value","value","localStorage","getItem","undefined","setItem","JSON","stringify","parse","getLangMap","lang","Promise","resolv","axios","get","then","res","data","catch","err","App","props","state","page","langMap","default_map","translate","bind","a","this","setState","translation","reduce","prev","cur","idx","replaceAll","classes","className","version","React","Component","withStyles","theme","position","left","bottom","margin","spacing","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"8OAMeA,EAJE,WACb,OAAO,8BCGIC,EAJA,WACX,OAAO,8BCHEC,EAAkB,SAACC,GAA6B,IAAxBC,EAAuB,uDAAP,GAC3CC,EAAQC,aAAaC,QAAQ,gBAAkBJ,GACrD,OAAc,OAAVE,QAA4BG,IAAVH,GAClBC,aAAaG,QAAQ,gBAAkBN,EAAKO,KAAKC,UAAUP,IACpDA,GAEJM,KAAKE,MAAMP,I,iBCJTQ,EAAa,SAACC,GACvB,OAAO,IAAIC,SAAQ,SAAAC,GAAM,OAAIC,IAAMC,IAAN,yFAA4FJ,EAA5F,UACxBK,MAAK,SAAAC,GAAG,OAAIJ,EAAOI,EAAIC,SAAOC,OAAM,SAAAC,GAAG,OAAIP,EAAO,W,QCYrDQ,E,kDACF,WAAYC,GAAQ,IAAD,8BACf,cAAMA,IACDC,MAAQ,CACTC,KAAM,EACNC,QAAS,IAGb,EAAKC,YDhBF,IAAId,SAAQ,SAAAC,GAAM,OAAIC,IAAMC,IAAN,0FACxBC,MAAK,SAAAC,GAAG,OAAIJ,EAAOI,EAAIC,SAAOC,OAAM,SAAAC,GAAG,OAAIP,EAAO,UCgBnD,EAAKc,UAAY,EAAKA,UAAUC,KAAf,gBARF,E,4FAWnB,4BAAAC,EAAA,sEAC0BnB,EAAWX,EAAgB,OAAQ,OAD7D,OACU0B,EADV,OAEIK,KAAKC,SAAS,CAAEN,YAFpB,gD,kFAKA,SAAed,GFxBU,IAACX,EAAKE,EAALF,EEyBR,OFzBaE,EEyBLS,EFxB1BR,aAAaG,QAAQ,gBAAkBN,EAAKO,KAAKC,UAAUN,IEyBvD4B,KAAKC,SAAS,CACVN,QAASf,EAAWC,O,uBAI5B,SAAUX,GAAkB,IAAbE,EAAY,uDAAJ,GACf8B,EAAc,GAOlB,OANIhC,KAAO8B,KAAKP,MAAME,QAClBO,EAAcF,KAAKP,MAAME,QAAQzB,GAE5BA,KAAO8B,KAAKJ,cACjBM,EAAcF,KAAKJ,YAAY1B,IAE5BE,EAAM+B,QAAO,SAACC,EAAMC,EAAKC,GAAZ,OAAoBF,EAAKG,WAAL,WAAoBD,GAAOD,KAAMH,K,oBAG7E,WAAU,IACEM,EAAYR,KAAKR,MAAjBgB,QACR,OACI,iCAE6B,IAApBR,KAAKP,MAAMC,MAAkC,IAApBM,KAAKP,MAAMC,OACrC,OAGoB,IAApBM,KAAKP,MAAMC,MACX,6BAEiB,IAApBM,KAAKP,MAAMC,MAAc,cAAC,EAAD,IACL,IAApBM,KAAKP,MAAMC,MAAc,cAAC,EAAD,IAC1B,sBAAKe,UAAWD,EAAQE,QAAxB,UACKV,KAAKH,UAAU,gBADpB,mB,GAjDEc,IAAMC,WAyDTC,eAlEA,SAACC,GAAD,MAAY,CACvBJ,QAAS,CACLK,SAAU,QACVC,KAAM,EACNC,OAAQ,EACRC,OAAO,GAAD,OAAKJ,EAAMK,QAAQ,GAAnB,cAA2BL,EAAMK,QAAQ,KAAzC,UA6DCN,CAAmBtB,G,MCpElC6B,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,W","file":"static/js/main.09d0fe47.chunk.js","sourcesContent":["import React from 'react'\n\nconst Survivor = () => {\n    return <></>\n}\n\nexport default Survivor","import React from 'react'\n\nconst Killer = () => {\n    return <></>\n}\n\nexport default Killer","export const loadFromStorage = (key, default_value = '') => {\n    const value = localStorage.getItem('hmysj_dbdrnd_' + key)\n    if (value === null || value === undefined) {\n        localStorage.setItem('hmysj_dbdrnd_' + key, JSON.stringify(default_value))\n        return default_value\n    }\n    return JSON.parse(value)\n}\n\nexport const saveToStorage = (key, value) => {\n    localStorage.setItem('hmysj_dbdrnd_' + key, JSON.stringify(value))\n}","import axios from 'axios'\n\nexport const getLangMap = (lang) => {\n    return new Promise(resolv => axios.get(`https://raw.githubusercontent.com/hm-ysjiang/DBDRandomPerks/master/assets/lang/${lang}.json`)\n        .then(res => resolv(res.data)).catch(err => resolv({})))\n}\n\nexport const getDefaultLangMap = () => {\n    return new Promise(resolv => axios.get(`https://raw.githubusercontent.com/hm-ysjiang/DBDRandomPerks/master/assets/lang/en.json`)\n        .then(res => resolv(res.data)).catch(err => resolv({})))\n}\n","import React from 'react'\nimport Survivor from './Pages/Survivor'\nimport Killer from './Pages/Killer'\nimport { loadFromStorage, saveToStorage } from './Utils/storage';\nimport { getDefaultLangMap, getLangMap } from './Utils/translation';\nimport { withStyles } from '@material-ui/core';\n\nconst styles = (theme) => ({\n    version: {\n        position: 'fixed',\n        left: 0,\n        bottom: 0,\n        margin: `${theme.spacing(1)}px ${theme.spacing(1.5)}px`\n    }\n})\n\nclass App extends React.Component {\n    constructor(props) {\n        super(props)\n        this.state = {\n            page: 0,\n            langMap: {}\n        }\n\n        this.default_map = getDefaultLangMap()\n        this.translate = this.translate.bind(this)\n    }\n\n    async componentDidMount() {\n        const langMap = await getLangMap(loadFromStorage('lang', 'en'))\n        this.setState({ langMap })\n    }\n\n    changeLanguage(lang) {\n        saveToStorage('lang', lang)\n        this.setState({\n            langMap: getLangMap(lang)\n        })\n    }\n\n    translate(key, value = []) {\n        let translation = ''\n        if (key in this.state.langMap) {\n            translation = this.state.langMap[key]\n        }\n        else if (key in this.default_map) {\n            translation = this.default_map[key]\n        }\n        return value.reduce((prev, cur, idx) => prev.replaceAll(`$${idx}`, cur), translation)\n    }\n\n    render() {\n        const { classes } = this.props\n        return (\n            <div>\n                {\n                    (this.state.page === 1 || this.state.page === 2) &&\n                    \"back\"\n                }\n                {\n                    this.state.page === 0 &&\n                    <></>\n                }\n                {this.state.page === 1 && <Survivor />}\n                {this.state.page === 2 && <Killer />}\n                <div className={classes.version}>\n                    {this.translate('misc_version')} 5.1.0\n                </div>\n            </div>\n        )\n    }\n}\n\nexport default withStyles(styles)(App)","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport './index.css';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}